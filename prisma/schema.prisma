generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  avatar    String?
  googleId  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions ChatSession[]

  @@map("users")
}

model ChatSession {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  ChatMessage[]
  documents Document[]

  @@map("chat_sessions")
}

model ChatMessage {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  role      MessageRole
  sessionId String      @db.ObjectId
  createdAt DateTime    @default(now())

  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}

model Document {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  content   String
  fileType  String
  fileSize  Int
  sessionId String   @db.ObjectId
  createdAt DateTime @default(now())

  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("documents")
}

enum MessageRole {
  USER
  ASSISTANT
}
